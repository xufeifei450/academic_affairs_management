{"ast":null,"code":"export default {\n  name: \"Course\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  created() {\n    this.load(1);\n    this.loadTeacher();\n  },\n  methods: {\n    choiceCourse(row) {\n      let data = {\n        studentId: this.user.id,\n        teacherId: row.teacherId,\n        courseId: row.id\n      };\n      this.$request.post('/choice/add', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('选课成功！');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadTeacher() {\n      this.$request.get('/teacher/selectAll').then(res => {\n        if (res.code === '200') {\n          this.teacherData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/course/update' : '/course/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/course/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/course/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/course/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","user","JSON","parse","localStorage","getItem","created","load","loadTeacher","methods","choiceCourse","row","studentId","id","teacherId","courseId","$request","post","then","res","code","$message","success","error","msg","get","teacherData","handleAdd","form","fromVisible","handleEdit","stringify","save","$refs","formRef","validate","valid","url","method","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","ids","map","v","delBatch","length","warning","pageNum","params","pageSize","list","total","reset","handleCurrentChange"],"sources":["src/views/manager/Curriculum.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"table\">\r\n            <el-table :data=\"tableData\" stripe>\r\n                <el-table-column prop=\"segment\" label=\"时间\" width=\"200\"></el-table-column>\r\n                <el-table-column prop=\"monday\" label=\"星期一\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"tuesday\" label=\"星期二\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"wednesday\" label=\"星期三\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"thursday\" label=\"星期四\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"friday\" label=\"星期五\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"saturday\" label=\"星期六\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"sunday\" label=\"星期日\" show-overflow-tooltip></el-table-column>\r\n\r\n            </el-table>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"Course\",\r\n        data() {\r\n            return {\r\n                tableData: [],  // 所有的数据\r\n                user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n            }\r\n        },\r\n        created() {\r\n            this.load(1)\r\n            this.loadTeacher()\r\n        },\r\n        methods: {\r\n            choiceCourse(row){\r\n                let data= {\r\n                    studentId:this.user.id,\r\n                    teacherId:row.teacherId,\r\n                    courseId:row.id\r\n                }\r\n                this.$request.post('/choice/add',data).then(res=>{\r\n                    if(res.code === '200'){\r\n                        this.$message.success('选课成功！')\r\n                    }else{\r\n                        this.$message.error(res.msg)\r\n                    }\r\n                })\r\n\r\n            },\r\n            loadTeacher() {\r\n                this.$request.get('/teacher/selectAll').then(res => {\r\n                    if (res.code === '200') {\r\n                        this.teacherData = res.data\r\n                    } else {\r\n                        this.$message.error(res.msg)\r\n                    }\r\n                })\r\n            },\r\n            handleAdd() {   // 新增数据\r\n                this.form = {}  // 新增数据的时候清空数据\r\n                this.fromVisible = true   // 打开弹窗\r\n            },\r\n            handleEdit(row) {   // 编辑数据\r\n                this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n                this.fromVisible = true   // 打开弹窗\r\n            },\r\n            save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n                this.$refs.formRef.validate((valid) => {\r\n                    if (valid) {\r\n                        this.$request({\r\n                            url: this.form.id ? '/course/update' : '/course/add',\r\n                            method: this.form.id ? 'PUT' : 'POST',\r\n                            data: this.form\r\n                        }).then(res => {\r\n                            if (res.code === '200') {  // 表示成功保存\r\n                                this.$message.success('保存成功')\r\n                                this.load(1)\r\n                                this.fromVisible = false\r\n                            } else {\r\n                                this.$message.error(res.msg)  // 弹出错误的信息\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            del(id) {   // 单个删除\r\n                this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                    this.$request.delete('/course/delete/' + id).then(res => {\r\n                        if (res.code === '200') {   // 表示操作成功\r\n                            this.$message.success('操作成功')\r\n                            this.load(1)\r\n                        } else {\r\n                            this.$message.error(res.msg)  // 弹出错误的信息\r\n                        }\r\n                    })\r\n                }).catch(() => {\r\n                })\r\n            },\r\n            handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n                this.ids = rows.map(v => v.id)   //  [1,2]\r\n            },\r\n            delBatch() {   // 批量删除\r\n                if (!this.ids.length) {\r\n                    this.$message.warning('请选择数据')\r\n                    return\r\n                }\r\n                this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                    this.$request.delete('/course/delete/batch', {data: this.ids}).then(res => {\r\n                        if (res.code === '200') {   // 表示操作成功\r\n                            this.$message.success('操作成功')\r\n                            this.load(1)\r\n                        } else {\r\n                            this.$message.error(res.msg)  // 弹出错误的信息\r\n                        }\r\n                    })\r\n                }).catch(() => {\r\n                })\r\n            },\r\n            load(pageNum) {  // 分页查询\r\n                if (pageNum) this.pageNum = pageNum\r\n                this.$request.get('/course/selectPage', {\r\n                    params: {\r\n                        pageNum: this.pageNum,\r\n                        pageSize: this.pageSize,\r\n                        name: this.name,\r\n                    }\r\n                }).then(res => {\r\n                    this.tableData = res.data?.list\r\n                    this.total = res.data?.total\r\n                })\r\n            },\r\n            reset() {\r\n                this.name = null\r\n                this.load(1)\r\n            },\r\n            handleCurrentChange(pageNum) {\r\n                this.load(pageNum)\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}