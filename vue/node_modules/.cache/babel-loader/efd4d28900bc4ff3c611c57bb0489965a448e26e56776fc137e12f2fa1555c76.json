{"ast":null,"code":"export default {\n  name: \"Score\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      courseId: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        ordinaryScore: [{\n          required: true,\n          message: '请输入平时分',\n          trigger: 'blur'\n        }],\n        examScore: [{\n          required: true,\n          message: '请输入期末分',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      courseData: [],\n      studentData: [],\n      studentId: null\n    };\n  },\n  created() {\n    this.load(1);\n    this.loadCourse();\n  },\n  methods: {\n    loadCourse() {\n      this.$request.get('/course/selectAll', {\n        params: {\n          teacherId: this.user.id\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.courseData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    getStudent(courseId) {\n      // 查询所有选择该门课的学生信息\n      this.$request.get('/choice/selectAll', {\n        params: {\n          courseId: courseId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.studentData = res.data;\n          this.studentId = null;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {\n        teacherId: this.user.id\n      }; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n      this.studentId = null;\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.studentId = this.form.studentId;\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.studentId = this.studentId;\n          this.$request({\n            url: this.form.id ? '/score/update' : '/score/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？删除后该学生的学分也会相应的减少，您需要重新再次录入？', '灵魂拷问', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/score/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/score/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/score/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          courseId: this.courseId\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.courseId = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","courseId","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ordinaryScore","required","message","trigger","examScore","ids","courseData","studentData","studentId","created","load","loadCourse","methods","$request","get","params","teacherId","id","then","res","code","$message","error","msg","getStudent","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","method","success","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","list","reset","handleCurrentChange"],"sources":["src/views/manager/Score.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-select v-model=\"courseId\" placeholder=\"请选择课程\" style=\"width: 200px\">\r\n        <el-option v-for=\"item in courseData\" :key=\"item\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n      </el-select>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\" v-if=\"user.role === 'TEACHER'\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\" v-if=\"user.role !== 'STUDENT'\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"studentName\" label=\"学生姓名\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"courseName\" label=\"课程名称\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"teacherName\" label=\"授课教师\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"ordinaryScore\" label=\"平时分\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"examScore\" label=\"期末分\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"score\" label=\"总成绩\" show-overflow-tooltip></el-table-column>\r\n\r\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\" v-if=\"user.role === 'TEACHER'\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n                background\r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page=\"pageNum\"\r\n                :page-sizes=\"[5, 10, 20]\"\r\n                :page-size=\"pageSize\"\r\n                layout=\"total, prev, pager, next\"\r\n                :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"courseId\" label=\"选择课程\">\r\n          <el-select v-model=\"form.courseId\" placeholder=\"请选择课程\" style=\"width: 100%\" @change=\"getStudent\">\r\n            <el-option v-for=\"item in courseData\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"studentId\" label=\"选择学生\">\r\n          <el-select v-model=\"studentId\" placeholder=\"请选择学生\" style=\"width: 100%\">\r\n            <el-option v-for=\"item in studentData\" :label=\"item.studentName\" :value=\"item.studentId\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"ordinaryScore\" label=\"平时分\">\r\n          <el-input v-model=\"form.ordinaryScore\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"examScore\" label=\"期末分\">\r\n          <el-input v-model=\"form.examScore\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"Score\",\r\n    data() {\r\n      return {\r\n        tableData: [],  // 所有的数据\r\n        pageNum: 1,   // 当前的页码\r\n        pageSize: 10,  // 每页显示的个数\r\n        total: 0,\r\n        courseId: null,\r\n        fromVisible: false,\r\n        form: {},\r\n        user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n        rules: {\r\n          ordinaryScore: [\r\n            {required: true, message: '请输入平时分', trigger: 'blur'},\r\n          ],\r\n          examScore: [\r\n            {required: true, message: '请输入期末分', trigger: 'blur'},\r\n          ],\r\n        },\r\n        ids: [],\r\n        courseData: [],\r\n        studentData: [],\r\n        studentId: null\r\n      }\r\n    },\r\n    created() {\r\n      this.load(1)\r\n      this.loadCourse()\r\n    },\r\n    methods: {\r\n      loadCourse() {\r\n        this.$request.get('/course/selectAll', {\r\n          params: {\r\n            teacherId: this.user.id\r\n          }\r\n        }).then(res => {\r\n          if (res.code === '200') {\r\n            this.courseData = res.data\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      },\r\n      getStudent(courseId) {\r\n        // 查询所有选择该门课的学生信息\r\n        this.$request.get('/choice/selectAll', {\r\n          params: {\r\n            courseId: courseId\r\n          }\r\n        }).then(res => {\r\n          if (res.code === '200') {\r\n            this.studentData = res.data\r\n            this.studentId = null\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      },\r\n      handleAdd() {   // 新增数据\r\n        this.form = {\r\n          teacherId: this.user.id\r\n        }  // 新增数据的时候清空数据\r\n        this.fromVisible = true   // 打开弹窗\r\n        this.studentId = null\r\n      },\r\n      handleEdit(row) {   // 编辑数据\r\n        this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n        this.studentId = this.form.studentId\r\n        this.fromVisible = true   // 打开弹窗\r\n      },\r\n      save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n        this.$refs.formRef.validate((valid) => {\r\n          if (valid) {\r\n            this.form.studentId = this.studentId\r\n            this.$request({\r\n              url: this.form.id ? '/score/update' : '/score/add',\r\n              method: this.form.id ? 'PUT' : 'POST',\r\n              data: this.form\r\n            }).then(res => {\r\n              if (res.code === '200') {  // 表示成功保存\r\n                this.$message.success('保存成功')\r\n                this.load(1)\r\n                this.fromVisible = false\r\n              } else {\r\n                this.$message.error(res.msg)  // 弹出错误的信息\r\n              }\r\n            })\r\n          }\r\n        })\r\n      },\r\n      del(id) {   // 单个删除\r\n        this.$confirm('您确定删除吗？删除后该学生的学分也会相应的减少，您需要重新再次录入？', '灵魂拷问', {type: \"warning\"}).then(response => {\r\n          this.$request.delete('/score/delete/' + id).then(res => {\r\n            if (res.code === '200') {   // 表示操作成功\r\n              this.$message.success('操作成功')\r\n              this.load(1)\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }).catch(() => {\r\n        })\r\n      },\r\n      handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n        this.ids = rows.map(v => v.id)   //  [1,2]\r\n      },\r\n      delBatch() {   // 批量删除\r\n        if (!this.ids.length) {\r\n          this.$message.warning('请选择数据')\r\n          return\r\n        }\r\n        this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n          this.$request.delete('/score/delete/batch', {data: this.ids}).then(res => {\r\n            if (res.code === '200') {   // 表示操作成功\r\n              this.$message.success('操作成功')\r\n              this.load(1)\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }).catch(() => {\r\n        })\r\n      },\r\n      load(pageNum) {  // 分页查询\r\n        if (pageNum) this.pageNum = pageNum\r\n        this.$request.get('/score/selectPage', {\r\n          params: {\r\n            pageNum: this.pageNum,\r\n            pageSize: this.pageSize,\r\n            courseId: this.courseId,\r\n          }\r\n        }).then(res => {\r\n          this.tableData = res.data?.list\r\n          this.total = res.data?.total\r\n        })\r\n      },\r\n      reset() {\r\n        this.courseId = null\r\n        this.load(1)\r\n      },\r\n      handleCurrentChange(pageNum) {\r\n        this.load(pageNum)\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}